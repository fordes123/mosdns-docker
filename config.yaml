log:
  level: info
  file: ""
  production: false


plugins:

  - tag: cache
    type: cache
    args:
      size: 1024
      lazy_cache_ttl: 0

 # 自定义Hosts
  - tag: hosts
    type: hosts
    args:
      files:
        - "./hosts"

  - tag: upstreams
    type: forward
    args:
      upstreams:
        - tag: cloudflare_tls
          addr: tls://1dot1dot1dot1.cloudflare-dns.com
          enable_pipeline: true
          idle_timeout: 50
          insecure_skip_verify: true
        
        - tag: opendns_tls
          addr: https://146.112.41.2/dns-query
          enable_pipeline: true
          idle_timeout: 50
          insecure_skip_verify: true

        - tag: twinc_tls
          addr: tls://101.101.101.101
          enable_pipeline: true
          idle_timeout: 50
          insecure_skip_verify: true

        - tag: dnspod
          addr: tls://1.12.12.12
          enable_pipeline: true
          idle_timeout: 30
          insecure_skip_verify: true
          
        - tag: aliyun
          addr: tls://223.5.5.5
          bootstrap: 223.5.5.5
          enable_pipeline: true
          idle_timeout: 30
          insecure_skip_verify: true

  # 本地域名的规则
  - tag: local_seq
    type: sequence
    args:
      - exec: $upstreams dnspod aliyun # 只请求 tag 是 dnspod 的上游。不指定 tag 默认请求 $upstreams 中的全部上游。

  # 远程域名的规则
  - tag: remote_seq
    type: sequence
    args:
      - exec: prefer_ipv4       # 希望 remote 优先 ipv4.
      - exec: $upstreams twinc_tls opendns_tls cloudflare_tls
      # - exec: jump fastest_cf # jump 相对于把 fastest_cf 的规则链插到此处。

  # 这个 sequence 转发请求到本地，返回只包含 cn IP 的应答。(过滤掉非 cn 的应答)
  - tag: local_must_has_cn
    type: sequence
    args:
      - exec: $upstreams dnspod aliyun
      - matches: "!resp_ip &./geoip_cn.txt"
        exec: drop_resp     # 如果应答里没有 cn IP，丢掉。

  # 利用 fallback 机制按 IP 分流。如果 local 服务器返回了 cn 的应答就接受，非 cn 的应答会被丢弃，使用 remote 服务器的应答。
  - tag: fallback_ip
    type: fallback
    args:
      primary: local_must_has_cn  # 空应答(本地服务器返回了非cn IP然后应答被丢弃了)触发 fallback。
      secondary: remote_seq       # fallback 后就会使用 remote 的应答。
      always_standby: true

  # 配置主 sequence 规则，作为服务器的入口。
  - tag: main
    type: sequence
    args:
      - exec: $hosts
      - exec: query_summary entry
      - matches:
          - qname &./geosite_category-ads-all.txt
        exec: reject 0
      - exec: $cache
      - {matches: has_resp, exec: accept}   # cache/hosts 等插件不再“命中记录自动跳过后续插件”，需用户自行判断是否有应答。
        # 方便需要 ipset/nftables 用户定制流程。
      # yaml 支持这种简写。
      - matches:
          - qname &./geosite_cn.txt # cn 域名
        exec: goto local_seq          # goto 到 local 规则，不在执行后续规则。
      - matches:
          - qname &./geosite_geolocation-!cn.txt # 非 cn 域名
        exec: goto remote_seq          # goto 到 remote 规则。

      - exec: $fallback_ip            # 剩余域名用 ip 分流。


  - tag: server
    type: udp_server # 目前有 udp/tcp/http_server
    args:
      entry: main
      listen: 0.0.0.0:53
  - tag: server_tcp
    type: tcp_server
    args:
      entry: main
      listen: 0.0.0.0:53